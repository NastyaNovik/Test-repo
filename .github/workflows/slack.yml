on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  slack-pr-thread:
    runs-on: ubuntu-latest
    steps:
      - name: Get thread_ts from PR comments
        id: get_thread
        uses: actions/github-script@v7
        with:
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const threadComment = comments.data.find(c => c.body.startsWith('SLACK_THREAD_TS:'));
            return threadComment ? threadComment.body.split('SLACK_THREAD_TS:')[1].trim() : '';

      - name: Send message to Slack
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          if [ -z "${{ steps.get_thread.outputs.result }}" ]; then
            # создаём новый тред
            RESPONSE=$(curl -s -X POST \
              -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
              -H "Content-type: application/json" \
              --data "{\"channel\":\"C09D2BV45PS\",\"text\":\":bell: *PR*: <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\n*Author*: ${{ github.event.pull_request.user.login }}\"}" \
              https://slack.com/api/chat.postMessage)
            TS=$(echo $RESPONSE | jq -r '.ts')
            # сохраняем в комментарий на PR
            curl -s -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-type: application/json" \
              --data "{\"body\": \"SLACK_THREAD_TS: $TS\"}" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
          else
            # обновляем существующий тред
            curl -s -X POST \
              -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
              -H "Content-type: application/json" \
              --data "{\"channel\":\"C09D2BV45PS\",\"text\":\":arrow_up: PR Update: <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\",\"thread_ts\":\"${{ steps.get_thread.outputs.result }}\"}" \
              https://slack.com/api/chat.postMessage
